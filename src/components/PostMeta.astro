---
import { categoryList } from "@/data/blog/category";
import { tagsList } from "@/data/blog/tags";
import { Icon } from "astro-icon/components";

interface Props {
  date: string;
  category: string;
  tags: string[];
}

const { date, category, tags } = Astro.props;

const categorySlug = categoryList.find(cat => cat.name === category)?.slug;

const getTagSlug = (tag: string) => {
  const tagData = tagsList.find(tagData => tagData.name === tag);
  return tagData?.slug;
};
---

<div class="post-meta">
  <div class="post-meta__item">
    <div class="btn-regular post-meta__icon">
      <Icon name="material-symbols:calendar-today-outline-rounded" />
    </div>
    <div class="post-meta__text">{date}</div>
  </div>
  <div class="post-meta__item">
    <div class="btn-regular post-meta__icon">
      <Icon name="material-symbols:book-2-outline-rounded" />
    </div>
    <a href=`category/${categorySlug}` class="post-meta__text hover">{category}</a>
  </div>
  <div class="post-meta__item">
    <div class="btn-regular post-meta__icon">
      <Icon name="material-symbols:tag-rounded" />
    </div>
    <div class="post-meta__tags">
      {tags.map((tag, i) => (
        <div class:list={[{"hidden": i == 0}, "separator"]}>/</div>
        <a href=`tag/${getTagSlug(tag)}` class="post-meta__tag hover">{tag}</a>
        )
      )}
    </div>
  </div>
</div>

<style lang="scss">
  .post-meta {
    display: flex;
    gap: 1rem;
    margin-left: 1rem;
    &__item {
      display: flex;
      gap: 0.4rem;
    }
    &__item {
      display: flex;
      align-items: center;
    }
    &__icon {
      width: 2rem;
      height: 2rem;
      font-size: 1.25rem;
      pointer-events: none;
    }
    &__text {
      font-size: 0.875rem;
    }
    &__tags {
      display: flex;
      .hidden {
        display: none;
      }
      .separator {
        margin-inline: 0.25rem;
      }
      > * + * {
        // &::before {
        //   content: '/';
        //   margin-inline: 0.5rem;
        // }
      }
    }
    &__tag {
      font-size: 0.875rem;
    }
    &__text, &__tag {
      &.hover {
        padding: 0.25rem;
        border-radius: 0.5rem;
        transition-property: background, color;
        transition-duration: 0.3s;
        @include mixin.hover {
          background: var(--btn-plain-bg-hover);
          color: var(--primary);
        }
      }
    }
  }
</style>

